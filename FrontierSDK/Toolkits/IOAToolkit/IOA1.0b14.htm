<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta name=Title content="Interactive Object Architecture 1">
<meta name=Keywords content="">
<meta http-equiv=Content-Type content="text/html; charset=macintosh">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="IOA1_files/filelist.xml">
<title>Interactive Object Architecture 1</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HyphenationZone>0</w:HyphenationZone>
  <w:DoNotHyphenateCaps/>
  <w:DrawingGridHorizontalSpacing>6 pt</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>6 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:DoNotShadeFormData/>
  <w:Compatibility>
   <w:OrigWordTableRules/>
   <w:NoLeading/>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:SpacingInWholePoints/>
   <w:ShowBreaksInFrames/>
   <w:SuppressTopSpacing/>
   <w:SuppressTopSpacingMac5/>
   <w:MWSmallCaps/>
   <w:UsePrinterMetrics/>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:DoNotUseHTMLParagraphAutoSpacing/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:UseWord97LineBreakingRules/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Times New Roman";
	panose-1:0 2 2 6 3 5 4 5 2 3;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:50331648 0 0 0 1 0;}
@font-face
	{font-family:"New York";
	panose-1:0 2 2 5 2 6 3 5 6 2;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:50331648 0 0 0 1 0;}
@font-face
	{font-family:Palatino;
	panose-1:0 2 0 5 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:50331648 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"New York";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:12.0pt;
	font-family:Helvetica;
	mso-font-kerning:0pt;
	text-decoration:underline;
	text-underline:single;}
h2
	{mso-style-next:Normal;
	margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:12.0pt;
	font-family:Helvetica;}
h3
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.25in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:12.0pt;
	font-family:"New York";}
h4
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.25in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"New York";
	text-decoration:underline;
	text-underline:single;
	font-weight:normal;}
h5
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	font-size:10.0pt;
	font-family:"New York";}
h6
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:6;
	font-size:10.0pt;
	font-family:"New York";
	text-decoration:underline;
	text-underline:single;
	font-weight:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:7;
	font-size:10.0pt;
	font-family:"New York";
	font-style:italic;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-page-numbers:1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<h1 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>I</span><span style='font-size:18.0pt;
text-decoration:none;text-underline:none'>nteractive </span><span
style='font-size:18.0pt'>O</span><span style='font-size:18.0pt;text-decoration:
none;text-underline:none'>bject </span><span style='font-size:18.0pt'>A</span><span
style='font-size:18.0pt;text-decoration:none;text-underline:none'>rchitecture
1.0b14<o:p></o:p></span></h1>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>UserLand Software, Inc.<o:p></o:p></span></h2>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>©
copyright 1993, UserLand Software, Inc.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>UserLand
Software is the developer of the UserLand Frontier scripting system. The
company is located at 400 Seaport Court, Redwood City, CA 94063. 415-369-6600,
415-369-6618 (fax). UserLand, Frontier, Frontier Runtime and Frontier Extras
are trademarks of UserLand Software, Inc. Other product names may be trademarks
or registered trademarks of their owners.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Email:
userland.dts@applelink.apple.com. If you’re an AppleLink user, check out the
UserLand Discussion Board under the Third Parties icon. CompuServe users enter
GO USERLAND at any ! prompt.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Comments,
questions and suggestions are welcome!<o:p></o:p></span></h3>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>Confidentiality<o:p></o:p></span></h2>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>This
specification and the IOA Toolkit is UserLand Confidential. <o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>It
is being disclosed to a very small group of people, assembled in
Section/Library 15 at GO USERLAND on CompuServe. <o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>IOA
may at some time be an open specification, but it is not open today. We want
your feedback, but you may not share this information with anyone, and may not
discuss it outside of Section 15 on CompuServe.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Interface
design tools is a competitive market. IOA is a competitive advantage. Any
breach of confidentiality could seriously hurt UserLand Software. We’re
trusting you. <o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Keep
it confidential.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Dave
Winer<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>UserLand
Software<o:p></o:p></span></h3>

<span style='font-size:18.0pt;font-family:Helvetica;mso-ansi-language:EN-US'><b><br
clear=ALL style='page-break-before:always'>
</b></span>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>Introduction<o:p></o:p></span></h2>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>IOA
is an acronym for Interactive Object Architecture. It’s a specification and a
Toolkit. The purpose of IOA is to open up Card Editor/Iowa Runtime so that
UserLand and others can add new object types.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>IOA
objects build on Apple’s Component Manager. You must be running either System
7.1 or QuickTime 1.0 or greater to build or run IOA components. All source
examples are provided in THINK C, as is the IOA Toolkit.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Writing
IOA components is not for script writers. You must be a system-level C or
Pascal programmer with good debugging skills. Writing IOA components is very
similar to writing a custom menu definition handler or control definition. But
the IOA protocol is more comprehensive and powerful, so there’s more to
understand.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>To
install: copy the folder containing the IOA Toolkit into your Frontier SDK
folder, which should be a sub-folder in the folder that contains your THINK C
application.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Start
by looking at one of the sample objects provided with the IOA Toolkit. Each
object implements a set of callback routines that perform operations like
drawing the object, handling a mouse click or a keystroke, or recalculating the
value of an object. Details are provided in the IOA Callbacks section, below. <o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Some
callbacks are optional. In some cases, the default behavior is what you want.
The IOA Toolkit automatically fills in defaults for you. Look at ioa.c to see
what the default callbacks do. See the Config Records section, below for more
info.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Each
object also sets a group of boolean flags that describe the object’s behavior
in relationship to other objects, and in relationship to the framework.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>All
callbacks receive a handle to a record that stores all information about the
object, a hdlobject. The object record contains handles to strings containing
the object’s value, name, and script. The objectrect field tells you where to
draw the object. There are many more fields in each object record. See “Object
Records” for details.<o:p></o:p></span></h3>

<span style='font-size:18.0pt;font-family:Helvetica;mso-ansi-language:EN-US'><b><br
clear=ALL style='page-break-before:always'>
</b></span>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>Contents of the resource fork of an IOA
component<o:p></o:p></span></h2>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Open
up one of the IOA files with ResEdit or Resorcerer. Here’s a list of the
resources that are contained in a typical file:<o:p></o:p></span></h3>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>CODE
63<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Contains the code of the IOA component. There’s no absolute
requirement that this be resource 63, but if you use a different resource
number, be sure you update the thng resource accordingly.<o:p></o:p></span></h5>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>ICN#
128<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Not sure what the Component Manager does with this. But
it’s a requirement that each component have an icon.<o:p></o:p></span></h5>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>SICN
130<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The icon for the object type. It appears in the tool
palette in Card Editor. It must be in resource 130.<o:p></o:p></span></h5>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>STR
128<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The short description for this object type. Displayed in
the Things! Control Panel, supplied by Apple.<o:p></o:p></span></h5>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>STR
129<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The long description for this object type. Displayed in the
Things! Control Panel, supplied by Apple.<o:p></o:p></span></h5>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>thng
128<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Ties all the resources in this file together. See the
Component Manager docs for details.<o:p></o:p></span></h5>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>vers
1<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Normal version resource.<o:p></o:p></span></h5>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-family:Palatino;
text-decoration:none;text-underline:none'>•<span style='mso-tab-count:1'>&nbsp; </span>vers
2<o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Normal version resource.<o:p></o:p></span></h5>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>You
can add other resources to your file, and access them using
OpenComponentResFile and CloseComponentResFile. See ioa.c for an example of
their use.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>The
file type must be thng. The creator can be anything you like. All
UserLand-supplied objects have a creator of LAND.<o:p></o:p></span></h3>

<span style='font-size:18.0pt;font-family:Helvetica;mso-ansi-language:EN-US'><b><br
clear=ALL style='page-break-before:always'>
</b></span>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>Object Records<o:p></o:p></span></h2>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>All
the information about each object is stored in an object record.<o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>The
record contains handles to the object’s name, value, script and error message.
It tells you where to draw the object. <o:p></o:p></span></h3>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Here’s
the declaration for object records from ioa.h:<o:p></o:p></span></h3>

<h4 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
text-decoration:none;text-underline:none'>typedef struct tyobject {<span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h4>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>struct tyobject **nextobject; /*next object in the object
list*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>struct tyobject **nextselectedobject; /*part of the
selection list structure*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'>&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>struct tyobject **childobjectlist; /*for group objects*/</span><span
style='font-size:9.0pt;font-family:Courier'><span style='mso-tab-count:1'> </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>struct tyobject **nextinthread; /*flat list of objects, for
run mode*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'> </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>struct tycard **owningcard; /*each object points back to
the card it appears in*/<o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>tyobjecttype objecttype; /*a button, checkbox, static text,
etc.*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>Rect objectrect; /*the display rectangle for the object*/</span><span
style='font-size:9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>Handle objectname; /*the variable name for this object*/</span><span
style='font-size:9.0pt;font-family:Courier'><span style='mso-tab-count:1'> </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>Handle objectvalue; /*the string that's displayed in the
object*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>Handle objectscript; /*the script that runs when the object
is hit*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'>&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>Handle objecterrormessage; /*error generated when the
object was calculated*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'> </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>Handle objectdata; /*a refcon handle*/</span><span
style='font-size:9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objectflag: 1; /*for buttons, true --&gt; bold,
checkboxes, the box is checked*/<o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objectvisible: 1; /*if false, the object isn't
drawn*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'> </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objectenabled: 1; /*if false the object is disabled*/<o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objecttransparent: 1; /*if true, don't erase the
rect before drawing object*/<o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objectautosize: 1; /*enables auto-resizing*/</span><span
style='font-size:9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objectinval: 1; /*indicates the object needs
re-display*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objecthasframe: 1; /*do we draw a frame for the
object?*/</span><span style='font-size:9.0pt;font-family:Courier'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objecttmpbit: 1; /*for any temporary use at all*/</span><span
style='font-size:9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>boolean objectselected: 1; /*if true, the object is part of
the selection list*/<o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>OSType objectlanguage; /*component subtype for linked
script's interpreter*/ <o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>Handle objecteditrecord; </span><span style='font-size:
9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>short objectfont;</span><span style='font-size:9.0pt;
font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>short objectfontsize;</span><span style='font-size:9.0pt;
font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>short objectstyle;</span><span style='font-size:9.0pt;
font-family:Courier'><span style='mso-tab-count:1'>&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>tyjustification objectjustification;</span><span
style='font-size:9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>RGBColor objectfillcolor;</span><span style='font-size:
9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>RGBColor objecttextcolor;</span><span style='font-size:
9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>RGBColor objectframecolor;</span><span style='font-size:
9.0pt;font-family:Courier'><span style='mso-tab-count:1'> </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>short objectdropshadowdepth;</span><span style='font-size:
9.0pt;font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>short objectlinespacing;</span><span style='font-size:9.0pt;
font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>short objectindentation;</span><span style='font-size:9.0pt;
font-family:Courier'><span style='mso-tab-count:1'>&nbsp;&nbsp; </span><o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>short sorttag; /*used for sorting the object list by
location*/<o:p></o:p></span></h5>

<h5 style='margin-top:5.5pt;margin-right:0in;margin-bottom:0in;margin-left:
.6in;margin-bottom:.0001pt'><span style='font-size:9.0pt;font-family:Courier;
font-weight:normal'>} tyobject, *ptrobject, **hdlobject;<o:p></o:p></span></h5>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Most
objects need to access or set only a few of the fields of the object record.
Here are some comments on each of the fields, and when you’re likely to use
them. <o:p></o:p></span></h3>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>nextobject<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Often, there’s no need to access this field directly, since
IOAvisitobjects is provided to traverse an object list. Radio button objects
use this field to traverse the object’s list, turning off all the other radio
button types.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>nextselectedobject,
childobjectlist, nextinthread<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>These are the “next” pointers for three list structures:
the selection list, a group objects list (nil if the objecttype ≠ grouptype)
and the flat thread linking all the objects together.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Few if any IOA components will need to access these
handles.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>owningcard<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This field is provided in case your object needs to get
information about the card that contains the object. See the declaration of
tycard in ioa.h for details.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objecttype<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>You know that objecttype is <u>your</u> object type. If
you’re visiting other objects in the object list, you will want to check the
objecttype field to determine the type of each object you’re looking at. It’s
cool to make changes to your own objects, but tread very carefully in changing
the attributes of other people’s objects.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectrect<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>A very important field. It determines where you do your
drawing and editing. In most cases, objects only draw inside their object
rectangle. But certain types (e.g. bold buttons) draw outside of their
rectangle. This is a historic (ie deeply ingrained) feature, it’s not likely to
change.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectname<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This is used by the framework to resolve references to
other object’s values in scripts. <o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectvalue<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Usually this is the text you display when drawing your
object. Some objects<span style="mso-spacerun: yes">&nbsp; </span>display a
function of the object value. Icons for example, convert the value to a number,
and display the icon family resource with that number.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectdata<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This is entirely up to you. It’s a handle, with no type.
When the card is saved, the handle is packed and written to the file. If you
have any handles linked into this record, they will <u>not</u> be saved, but
the address of the handle will be saved. This is always the wrong value. Nil
out linked handles in your postUnpack callback.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectflag<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This boolean is set from the first command in the Object
menu in Card Editor. It can be used to toggle your object, e.g.
checked/unchecked checkboxes. Or bold/not bold buttons. It’s up to you to
determine how the flag is interpreted, or not interpreted.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>You can change what’s displayed in the Object menu when
your object is selected by setting the objectFlagName field of the objectConfig
record. It’s described below.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectvisible, objectenabled<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If the objectvisible boolean is false, the framework won’t
call your draw routine. It presets the text color to gray if objectenabled is
false, before calling your draw routine.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objecttransparent<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Normally, you’ll erase the rectangle containing the object
before drawing it. If objecttransparent is true, you should not erase the
rectangle.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectinval<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Set this true at any time to force a redraw of the object
the next time thru the main event loop. If your object changes the state of any
other object, it should set its inval boolean true.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectautosize<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Set this true in your init callback, or before editing, to
activate Iowa’s automatic resizing feature on this object.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objecttmpbit<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Can be used for whatever purpose you like. But don’t depend
on its value remaining constant after you return from your callback.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectselected<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This boolean is true if the object is in the selection
list. It can only be true in Card Editor.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectlanguage<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Is the 4-character identifier of the scripting component
that runs the script in objectscript.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objecteditrecord<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>An edit buffer that’s non-nil only when the object’s text
is being edited. Not sure what an object can do with this handle. It is used
extensively in the framework.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objecthasframe, objectfont,
objectfontsize, objectstyle, objectjustification, objectfillcolor,
objecttextcolor, objectframecolor, objectdropshadowdepth<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>These attributes are dealt with automatically by the
framework. You should not change their values, and when drawing your object,
you don’t need to set up the Mac toolbox to use these values -- it’s already
been done for you by the framework.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>objectlinespacing,
objectindentation<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>These attributes are waiting for the day when we have a
better text editor wired into editable text objects and static text objects.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>sorttag<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>A temporary field used when sorting lists. You can use it
like the tmpbit if you absolutely have to.<o:p></o:p></span></h5>

<span style='font-size:18.0pt;font-family:Helvetica;mso-ansi-language:EN-US'><b><br
clear=ALL style='page-break-before:always'>
</b></span>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>Config Records<o:p></o:p></span></h2>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Iowa
needs certain basic info in order to manage your object. One of the calls you
must implement is the getConfigRecord callback. It returns an objectConfig
record, which contains the following fields:<o:p></o:p></span></h3>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>char objectTypeName [32];<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>A string of at most 31 characters containing the type’s
name. It’s used in displaying information about the object in the 2click dialog
in Card Editor.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>long objectTypeID;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The type number assigned to this object.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Object yypes are 32-bit signed numbers. To avoid the need
for an object “reunion” utility, IOA developers should ask UserLand for a
unique object type, or range of object types. There’s no requirement that you
tell us what your object does. All types less than 128 are reserved.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>1/19/93: Here’s a list of current IOA object types
implemented by UserLand Software:<o:p></o:p></span></h5>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>grouptype = 1 /*implemented internally in framework*/<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>checkboxtype = 2<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>radiobuttontype = 3<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>picturetype = 4<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>statictexttype = 5<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>edittexttype = 6<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>buttontype = 7 /*note two missing types, following*/<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>recttype = 10<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>linetype = 11<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>ovaltype = 12<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>icontype = 13<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>formulatype = 14<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>popuptype = 15<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>clonetype = 16 /*implemented internally in
framework*/<o:p></o:p></span></h6>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>char objectFlagName [32];<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Different objects use the objectflag field of the object
record in different ways. Checkboxes and radio buttons are on if their flag is
true, off if the flag is false. Buttons are bold if the flag is true.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If you don’t make use of the flag field, leave this string
empty. Otherwise set it to explain your interpretation of the objectflag. When
only objects of your type are selected, the first item in the Object menu will
reflect your interpretation of the objectflag field. In all other cases it will
display as “Flag.”<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>Handle hsmallicon;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>ioa.c automatically fills this field in by reading SICN 130
from the component’s resource fork.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean frameWhenEditing;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If true, the framework draws a frame around the object when
its value is being edited.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean canEditValue;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If true, when the user presses the Enter key with the
object selected, the value of the object is edited. For example, static text
objects definitely want to allow the value to be edited. Icon objects don’t.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean toggleFlagWhenHit;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If true, when the object is clicked in runmode, we invert
its objectflag value, and redraw the object.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Checkboxes and radiobuttons both have this bit turned on.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean mutuallyExclusive;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If true, when Card Runner starts up the card:<o:p></o:p></span></h5>

<h6 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-size:12.0pt;
font-family:Palatino;text-decoration:none;text-underline:none'>•<span
style='mso-tab-count:1'>&nbsp; </span>All objects of this type are turned off,
their objectflag is set to false.<o:p></o:p></span></h6>

<h6 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-size:12.0pt;
font-family:Palatino;text-decoration:none;text-underline:none'>•<span
style='mso-tab-count:1'>&nbsp; </span>The “first” mutually exclusive object in
each group is turned on. Ordering is visual. The topmost, leftmost object is
the first object in a group.<o:p></o:p></span></h6>

<h6 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-size:12.0pt;
font-family:Palatino;text-decoration:none;text-underline:none'>•<span
style='mso-tab-count:1'>&nbsp; </span>As usual, the top-level of the card is
considered to be a group.<o:p></o:p></span></h6>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean speaksForGroup;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>When Iowa is determining the value of a named group object,
it scans the group looking for objects that are willing to speak on behalf of
the group. When determining the value of a group, the value of the group is the
value of the first speaker whose objectflag is on.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Radio button objects are speakers. The value of the first
(and only) radio button in a group that’s turned on is the value of the group. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This flag makes it possible for other object types to
behave like radio buttons.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean handlesMouseTrack;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Set this true if your object type needs to handle run-mode
mouse tracking for itself. Popup menus and editable text objects handle their
own mouse tracking.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If your object doesn’t handle mouse tracking, Card Runner
handles tracking for you. Here’s how: <o:p></o:p></span></h5>

<h6 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-size:12.0pt;
font-family:Palatino;text-decoration:none;text-underline:none'>•<span
style='mso-tab-count:1'>&nbsp; </span>It sets the tracking field of the card
record to true. <o:p></o:p></span></h6>

<h6 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-size:12.0pt;
font-family:Palatino;text-decoration:none;text-underline:none'>•<span
style='mso-tab-count:1'>&nbsp; </span>While the mouse is down, it calls your
drawObject callback repeatedly. If the mouse is pointing in your object
rectangle, the trackerpressed field of the card record is set true, otherwise
it’s false.<o:p></o:p></span></h6>

<h6 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt;text-indent:-13.0pt'><span style='font-size:12.0pt;
font-family:Palatino;text-decoration:none;text-underline:none'>•<span
style='mso-tab-count:1'>&nbsp; </span>A handle to the card record is linked
into each object record, in the owningcard field.<o:p></o:p></span></h6>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>In your drawObject callback you should watch for this and
draw your object “hot” if the conditions are met:<o:p></o:p></span></h5>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>hdlcard hc = (**h).owningcard;<o:p></o:p></span></h6>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>if ((**hc).tracking &amp;&amp; (**hc).trackerpressed)<o:p></o:p></span></h6>

<p class=MsoHeading7 style='margin-top:6.0pt;margin-right:0in;margin-bottom:
0in;margin-left:.6in;margin-bottom:.0001pt'><span style='font-family:Courier;
font-style:normal'>draw it hot<o:p></o:p></span></p>

<h6 style='margin-top:6.0pt;margin-right:0in;margin-bottom:0in;margin-left:
.3in;margin-bottom:.0001pt'><span style='font-family:Courier;text-decoration:
none;text-underline:none'>else<o:p></o:p></span></h6>

<p class=MsoHeading7 style='margin-top:6.0pt;margin-right:0in;margin-bottom:
0in;margin-left:.6in;margin-bottom:.0001pt'><span style='font-family:Courier;
font-style:normal'>draw it normally<o:p></o:p></span></p>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>See radio.c&nbsp;and checkbox.c for examples.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean editableInRunMode;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Set this to true if your object can be edited by the user
when the card is running.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If so, your editObject callback will be called when the
user clicks on the object, or when the user moves to your object with the tab
key. editObject takes a boolean parameter indicating whether you should
activate your editor or deactivate it.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean isFontAware;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Set this to true if you care about the font, size and style
of your text. If you don’t care, the Edit menu’s styling sub-menus will be
disabled when your object is selected. Pictures, icons, lines, rectangles and
ovals set this false. Other object types set it true.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This flag controls the “global” styling of the object. For
example, you can set the font of an entire text object to Geneva, but you
cannot selectively style a single word in a text object. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If more than one object is selected, and one or more is
font-aware, the menus are enabled, but a font command will only set the
attributes of objects that are font-aware. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If you are not font-aware, you can depend on your object’s
objectfont, objectfontsize, objectstyle and objectjustification remaining
unchanged.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean alwaysIdle;<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If this flag is set true, your idleObject callback will be
called on every idle loop when the card is running, even if it isn’t currently
being edited.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>It’s very rare for objects to set this bit, in fact, none
of the UserLand-supplied objects (1/19/93) do. But it’s forseeable that some
object might want to get a shot at the processor whenever the machine is idle.<o:p></o:p></span></h5>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>IOA Callbacks<o:p></o:p></span></h2>

<h3 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;font-weight:normal'>Here’s
a description of each of the callback routines implemented by each IOA
component:<o:p></o:p></span></h3>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>void getConfigRecord
(tyconfigrecord *);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>This is handled automatically by the IOA Toolkit in ioa.c,
it’s called when the component receives its kComponentOpenSelect message. It
sets defaults for callbacks and flags and then calls your setupconfig routine,
which every IOA component must implement.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean initObject (tyobject *);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Fill in the fields of the object record with the defaults
for your object type. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return true if you want the object to be edited, false
otherwise.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Before you’re called, the object fields were set to default
values for all new objects. The objecttype field was set to your type, and
objectautosize was set true if the card designer clicked to create the new
object, false if the object’s rectangle was determined by the user dragging to
create the new object.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If your object needs to be recalculated after the object
record is allocated, set the object record’s objecttmpbit field to true. The
object will be recalc’d before Iowa returns to its main event loop. (Popup
menus use this feature).<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>void drawObject (hdlobject);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Draw the object using its objectrect and objectvalue and
perhaps other information stored in the object record.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Normally, after you draw the object, if it’s selected, the
framework will draw a selection frame and a “nub” around the object’s
rectangle. If your object looks bad with a frame around it, set the object’s
objecttmpbit true, and no frame will be drawn. A nub is always drawn. [Frame
object types set objecttmpbit true.]<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean clickObject (hdlobject,
hdlobject, Point, boolean);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The user clicked in your object while the card is running. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The first object you’re passed is called listhead, it’s the
first object in the group containing the object, or if it’s not contained in a
group, the first object in the card. Some object types need to operate on other
objects, for example radio buttons turn off all radio buttons except for the
one that was clicked on.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The second hdlobject is the one that was clicked on.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The third parameter is the mouse location when the mouse
was clicked. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The fourth parameter is true if the shift key is down,
false if it is up.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return true if you changed the value of any object, false
otherwise.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean editObject (hdlobject,
boolean);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Called when the user clicks on your object in run mode, or
when the user moves into your object with tab key. In both these cases, the
boolean parameter is true, indicating that you should start editing the object.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>It is also called with the boolean set false when the user
clicks on a <u>different object</u> to edit it, or tabs <u>out</u> of your
object. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>You can use the objecteditrecord field of your object
record to store a record describing the editing state of your object. (Not sure
about this. DW 1/23/93)<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean idleObject (hdlobject)<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Called in run mode when your object is the active editing
object while waiting for the user to do something.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Editable text objects flash the insertion point.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean setObjectCursor
(hdlobject, Point); <o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>In run mode, the mouse cursor is pointing at your object.
Set the cursor accordingly.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return false if you want the default arrow cursor.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The second parameter is the current mouse location, in case
your choice of cursor depends on where in the object the mouse is pointing.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Your setObjectCursor handler will only be called if the
object is enabled.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean keystrokeObjectCallback
(hdlobject, char);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Called in run mode when the user enters a keystroke when
your object is the active editing object.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Editable text objects insert the character at the insertion
location.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>void cleanupObject (hdlobject,
short, short, Rect *);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Change the rectangle so the object can exactly display its contents.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>We pre-compute the height and width of the text value of
the object, and pass them as the second and third parameters. Many objects
determine their size as a function of the size of the text (e.g. checkboxes,
buttons). But you can ignore these values if you want. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return the object rectangle. Don’t worry about its
position, just its size. After you return, the framework takes care of aligning
the corners of the rectangle to the grid.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean recalcObject (hdlobject,
boolean);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If your object’s value isn’t calculated, just return true.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The boolean parameter is true if this is a major recalc,
false if it’s a minor one. If it is, you have to decide whether it gets
calculated only when the card starts up (a major recalc) or whenever the value
of another object changes (a minor recalc).<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Examples: popup menus are evaluated when the card starts
up. Same with text objects, checkboxes and radio buttons. Formulas recalc on
major and minor recalcs.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean canReplicateObject
(hdlobject);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Called when the user hits the Return key with your object
selected. Look at the fields of the object record to determine if the Return
key should be used to create a new object.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Most objects simply return true without checking the
fields. Exceptions are static text objects and editable text objects.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>void getObjectInvalRect
(hdlobject, Rect *);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return the rectangle that you want invalidated to force a
redraw of the object. Usually this is just (**h).objectrect, but in some cases
(e.g. bold buttons) it’s necessary to invalidate more than the object’s
rectangle.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean getObjectEditRect
(hdlobject, Rect *);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return false if the object can’t be edited.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Otherwise return the editing rectangle for the object. It’s
usually derived from the objectrect field of the hdlobject.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean getValueForScript
(hdlobject, Handle *);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return a handle containing the value of the object, in text
form, to be substituted in a script.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Although your code shouldn’t care, getValueForScript is
only called when your object has a name and it’s referenced by the script
linked into another object.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>For example, a radio button object returns true if it’s
turned on, false if not. An editable text object returns the current text of
the object, in double quotes.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The syntax of your returned value should match conventions
across scripting languages. The constants true and false are recognized by both
Frontier and AppleScript. Quoted strings use the same syntax in both systems.
In Frontier 2.1, list constants will be supported, so it’s safe to return one,
for example: {“Red”, “Green”, “Blue”}.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Doug says that this should return an Apple Event descriptor
instead. What do you think?<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean postUnpackObject
(hdlobject);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>After the framework unpacks an object from a packed card,
you have a shot at the object record.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>For example, popup objects nil out a handle that gets saved
in its data record and intializes other fields.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The returned boolean value is ignored.<o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean debugObject (hdlobject,
Str255);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return true if the fields of the object record are
consistent. If they are not consistent, return false, and set the string to
your error message. This is used for debugging the Iowa framework.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Current implementation of all UserLand-supplied objects
simply returns true. <o:p></o:p></span></h5>

<h4 style='margin-top:15.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:14.0pt;font-family:Helvetica;
text-decoration:none;text-underline:none'><b>boolean catchReturn (hdlobject);<o:p></o:p></b></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>The user just hit the Return key in run mode. Does your
object want to catch it? Bold buttons do. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Return true if you want to handle it. Return false if you
want to pass it on. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>If you return true, the framework highlights your object,
waits three clock ticks, waits for the Return key to come back up, then
un-highlights the object. Then Iowa calls your clickObject handler.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>Only enabled objects are considered for handling the Return
key.<o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>For bold buttons, we thought about making it conditional on
whether or not there was an active text object, but decided to leave this to
the card designer. If you want to catch the Return key, use a bold button. If
you want to pass the Return key into editable text, use a normal button. <o:p></o:p></span></h5>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'>We left this as a callback instead of a flag, because it’s
at least conceivable that the catching of Return keys might be conditional for
some future object type.<o:p></o:p></span></h5>

<span style='font-size:18.0pt;font-family:Helvetica;mso-ansi-language:EN-US'><b><br
clear=ALL style='page-break-before:always'>
</b></span>

<h2 style='margin-top:.25in;margin-right:0in;margin-bottom:9.0pt;margin-left:
0in'><span style='font-size:18.0pt'>Random Notes<o:p></o:p></span></h2>

<h3 style='margin-top:14.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino'>setupconfig<o:p></o:p></span></h3>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>Every IOA component must implement a routine called
setupconfig.<o:p></o:p></span></h4>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>You should fill in the fields of the config record,
link in your callbacks. You can also initialize globals. The resource fork of
your component file is open while your setupconfig routine is running, so it’s
a good time to load stuff from a resource.<o:p></o:p></span></h4>

<h3 style='margin-top:14.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino'>Internal object
types<o:p></o:p></span></h3>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>Two object types, groups and clones, are implemented
internally in the framework, since they are structural to cards, and rely on a
much more intimate relationship with the Iowa framework than other object
types. <o:p></o:p></span></h4>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>Detail: Card Editor also knows how to paste a
PicHandle into a picture object. If a picture object is selected when the user
has selected a single picture object, the PicHandle replaces the picture. If
nothing is selected, a new picture object is created.<span style="mso-spacerun:
yes">&nbsp; </span>We hope in a future version of the spec to remove this
special knowledge of picture objects from Card Editor.<o:p></o:p></span></h4>

<h3 style='margin-top:14.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino'>Two utilities
from Apple<o:p></o:p></span></h3>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>The </span><span style='font-family:Palatino'>Things!</span><span
style='font-family:Palatino;text-decoration:none;text-underline:none'> Control
Panel is a must-have for component developers. It’s a simple browser for all
components you have loaded. It’s available on Apple’s Developer CDs.<o:p></o:p></span></h4>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>Another utility, </span><span style='font-family:
Palatino'>Reinstaller</span><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>, allows you to drag/drop new component files onto
it. They are installed. Be sure to close Things! before doing so, since it
seems to make it crash. But this saves you from having to do a restart just to
install a new component. It’s available on Apple’s Developer CDs. <o:p></o:p></span></h4>

<h5 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-size:12.0pt;font-family:Palatino;
font-weight:normal'><i>Note: at some point we will provide component management
verbs for Frontier, or a UCMD, so it will be possible to do custom installers
as scripts. Reinstaller is a nice start, but it really should be a droplet.<o:p></o:p></i></span></h5>

<h3 style='margin-top:14.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino'>Component Manager
access from Frontier scripts<o:p></o:p></span></h3>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>You can register or unregister components from
Frontier scripts using the Components UCMD. It’s in the Extras folder in the
Iowa 1.0b14 release.<o:p></o:p></span></h4>

<h3 style='margin-top:14.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino'>New feature in
Iowa 1.0b14<o:p></o:p></span></h3>

<h4 style='margin-top:7.0pt;margin-right:0in;margin-bottom:0in;margin-left:
0in;margin-bottom:.0001pt'><span style='font-family:Palatino;text-decoration:
none;text-underline:none'>Added an EventRecord to the definition of a hdlcard.
This allows IOA components to pass on the record to a toolkit, such as
QuickTime or the List Manager. It’s set in the main event loop of Card Editor
and in the main event handler in Iowa Runtime. When your component is called,
(**(**h).owningcard).macevent contains the last event received thru
WaitNextEvent.<o:p></o:p></span></h4>

</div>

</body>

</html>
